on:
  - pull_request
  - push

name: ci-pgsql

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: PHP ${{ matrix.php }}-pgsql-${{ matrix.pgsql }}
    env:
      EXTENSIONS: curl, intl, pdo, pdo_pgsql

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - 8.1
          - 8.2

        pgsql:
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15

    services:
      postgres:
        image: postgres:${{ matrix.pgsql }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yiitest
        ports:
          - 5432:5432
        options: --name=postgres --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout.
        uses: actions/checkout@v4

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          extensions: ${{ env.EXTENSIONS }}
          ini-values: date.timezone='UTC'
          php-version: ${{ matrix.php }}
          tools: composer:v2, pecl

      - name: Install dependencies with composer
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run Pgsql tests with PHPUnit and generate coverage.
        if: matrix.php == '8.1'
        run: vendor/bin/phpunit --group pgsql --coverage-clover=coverage.xml --colors=always --verbose

      - name: Run Pgsql tests with PHPUnit.
        if: matrix.php != '8.1'
        run: vendor/bin/phpunit --group pgsql --colors=always --verbose

      - name: Upload coverage to Codecov.
        if: matrix.php == '8.1'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
