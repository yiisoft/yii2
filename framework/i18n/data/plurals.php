<?php
/**
 * Plural rules.
 *
 * This file is automatically generated by the "yiic locale/plural" command under the "build" folder.
 * Do not modify it directly.
 *
 * The original plural rule data used for generating this file has the following copyright terms:
 *
 * Copyright Â© 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 *
 * @revision 6008 (of the original plural file)
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */
return array (
  'ar' => 
  array (
    0 => '$n==0',
    1 => '$n==1',
    2 => '$n==2',
    3 => 'in_array(fmod($n,100),range(3,10))',
    4 => 'in_array(fmod($n,100),range(11,99))',
  ),
  'asa' => 
  array (
    0 => '$n==1',
  ),
  'af' => 
  array (
    0 => '$n==1',
  ),
  'bem' => 
  array (
    0 => '$n==1',
  ),
  'bez' => 
  array (
    0 => '$n==1',
  ),
  'bg' => 
  array (
    0 => '$n==1',
  ),
  'bn' => 
  array (
    0 => '$n==1',
  ),
  'brx' => 
  array (
    0 => '$n==1',
  ),
  'ca' => 
  array (
    0 => '$n==1',
  ),
  'cgg' => 
  array (
    0 => '$n==1',
  ),
  'chr' => 
  array (
    0 => '$n==1',
  ),
  'da' => 
  array (
    0 => '$n==1',
  ),
  'de' => 
  array (
    0 => '$n==1',
  ),
  'dv' => 
  array (
    0 => '$n==1',
  ),
  'ee' => 
  array (
    0 => '$n==1',
  ),
  'el' => 
  array (
    0 => '$n==1',
  ),
  'en' => 
  array (
    0 => '$n==1',
  ),
  'eo' => 
  array (
    0 => '$n==1',
  ),
  'es' => 
  array (
    0 => '$n==1',
  ),
  'et' => 
  array (
    0 => '$n==1',
  ),
  'eu' => 
  array (
    0 => '$n==1',
  ),
  'fi' => 
  array (
    0 => '$n==1',
  ),
  'fo' => 
  array (
    0 => '$n==1',
  ),
  'fur' => 
  array (
    0 => '$n==1',
  ),
  'fy' => 
  array (
    0 => '$n==1',
  ),
  'gl' => 
  array (
    0 => '$n==1',
  ),
  'gsw' => 
  array (
    0 => '$n==1',
  ),
  'gu' => 
  array (
    0 => '$n==1',
  ),
  'ha' => 
  array (
    0 => '$n==1',
  ),
  'haw' => 
  array (
    0 => '$n==1',
  ),
  'he' => 
  array (
    0 => '$n==1',
  ),
  'is' => 
  array (
    0 => '$n==1',
  ),
  'it' => 
  array (
    0 => '$n==1',
  ),
  'jmc' => 
  array (
    0 => '$n==1',
  ),
  'kaj' => 
  array (
    0 => '$n==1',
  ),
  'kcg' => 
  array (
    0 => '$n==1',
  ),
  'kk' => 
  array (
    0 => '$n==1',
  ),
  'kl' => 
  array (
    0 => '$n==1',
  ),
  'ksb' => 
  array (
    0 => '$n==1',
  ),
  'ku' => 
  array (
    0 => '$n==1',
  ),
  'lb' => 
  array (
    0 => '$n==1',
  ),
  'lg' => 
  array (
    0 => '$n==1',
  ),
  'mas' => 
  array (
    0 => '$n==1',
  ),
  'ml' => 
  array (
    0 => '$n==1',
  ),
  'mn' => 
  array (
    0 => '$n==1',
  ),
  'mr' => 
  array (
    0 => '$n==1',
  ),
  'nah' => 
  array (
    0 => '$n==1',
  ),
  'nb' => 
  array (
    0 => '$n==1',
  ),
  'nd' => 
  array (
    0 => '$n==1',
  ),
  'ne' => 
  array (
    0 => '$n==1',
  ),
  'nl' => 
  array (
    0 => '$n==1',
  ),
  'nn' => 
  array (
    0 => '$n==1',
  ),
  'no' => 
  array (
    0 => '$n==1',
  ),
  'nr' => 
  array (
    0 => '$n==1',
  ),
  'ny' => 
  array (
    0 => '$n==1',
  ),
  'nyn' => 
  array (
    0 => '$n==1',
  ),
  'om' => 
  array (
    0 => '$n==1',
  ),
  'or' => 
  array (
    0 => '$n==1',
  ),
  'pa' => 
  array (
    0 => '$n==1',
  ),
  'pap' => 
  array (
    0 => '$n==1',
  ),
  'ps' => 
  array (
    0 => '$n==1',
  ),
  'pt' => 
  array (
    0 => '$n==1',
  ),
  'rof' => 
  array (
    0 => '$n==1',
  ),
  'rm' => 
  array (
    0 => '$n==1',
  ),
  'rwk' => 
  array (
    0 => '$n==1',
  ),
  'saq' => 
  array (
    0 => '$n==1',
  ),
  'seh' => 
  array (
    0 => '$n==1',
  ),
  'sn' => 
  array (
    0 => '$n==1',
  ),
  'so' => 
  array (
    0 => '$n==1',
  ),
  'sq' => 
  array (
    0 => '$n==1',
  ),
  'ss' => 
  array (
    0 => '$n==1',
  ),
  'ssy' => 
  array (
    0 => '$n==1',
  ),
  'st' => 
  array (
    0 => '$n==1',
  ),
  'sv' => 
  array (
    0 => '$n==1',
  ),
  'sw' => 
  array (
    0 => '$n==1',
  ),
  'syr' => 
  array (
    0 => '$n==1',
  ),
  'ta' => 
  array (
    0 => '$n==1',
  ),
  'te' => 
  array (
    0 => '$n==1',
  ),
  'teo' => 
  array (
    0 => '$n==1',
  ),
  'tig' => 
  array (
    0 => '$n==1',
  ),
  'tk' => 
  array (
    0 => '$n==1',
  ),
  'tn' => 
  array (
    0 => '$n==1',
  ),
  'ts' => 
  array (
    0 => '$n==1',
  ),
  'ur' => 
  array (
    0 => '$n==1',
  ),
  'wae' => 
  array (
    0 => '$n==1',
  ),
  've' => 
  array (
    0 => '$n==1',
  ),
  'vun' => 
  array (
    0 => '$n==1',
  ),
  'xh' => 
  array (
    0 => '$n==1',
  ),
  'xog' => 
  array (
    0 => '$n==1',
  ),
  'zu' => 
  array (
    0 => '$n==1',
  ),
  'ak' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'am' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'bh' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'fil' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'tl' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'guw' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'hi' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'ln' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'mg' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'nso' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'ti' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'wa' => 
  array (
    0 => '($n==0||$n==1)',
  ),
  'ff' => 
  array (
    0 => '($n>=0&&$n<=2)&&$n!=2',
  ),
  'fr' => 
  array (
    0 => '($n>=0&&$n<=2)&&$n!=2',
  ),
  'kab' => 
  array (
    0 => '($n>=0&&$n<=2)&&$n!=2',
  ),
  'lv' => 
  array (
    0 => '$n==0',
    1 => 'fmod($n,10)==1&&fmod($n,100)!=11',
  ),
  'iu' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'kw' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'naq' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'se' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'sma' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'smi' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'smj' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'smn' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'sms' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
  ),
  'ga' => 
  array (
    0 => '$n==1',
    1 => '$n==2',
    2 => 'in_array($n,array(3,4,5,6))',
    3 => 'in_array($n,array(7,8,9,10))',
  ),
  'ro' => 
  array (
    0 => '$n==1',
    1 => '$n==0||$n!=1&&in_array(fmod($n,100),range(1,19))',
  ),
  'mo' => 
  array (
    0 => '$n==1',
    1 => '$n==0||$n!=1&&in_array(fmod($n,100),range(1,19))',
  ),
  'lt' => 
  array (
    0 => 'fmod($n,10)==1&&!in_array(fmod($n,100),range(11,19))',
    1 => 'in_array(fmod($n,10),range(2,9))&&!in_array(fmod($n,100),range(11,19))',
  ),
  'be' => 
  array (
    0 => 'fmod($n,10)==1&&fmod($n,100)!=11',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => 'fmod($n,10)==0||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(11,12,13,14))',
  ),
  'bs' => 
  array (
    0 => 'fmod($n,10)==1&&fmod($n,100)!=11',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => 'fmod($n,10)==0||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(11,12,13,14))',
  ),
  'hr' => 
  array (
    0 => 'fmod($n,10)==1&&fmod($n,100)!=11',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => 'fmod($n,10)==0||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(11,12,13,14))',
  ),
  'ru' => 
  array (
    0 => 'fmod($n,10)==1&&fmod($n,100)!=11',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => 'fmod($n,10)==0||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(11,12,13,14))',
  ),
  'sh' => 
  array (
    0 => 'fmod($n,10)==1&&fmod($n,100)!=11',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => 'fmod($n,10)==0||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(11,12,13,14))',
  ),
  'sr' => 
  array (
    0 => 'fmod($n,10)==1&&fmod($n,100)!=11',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => 'fmod($n,10)==0||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(11,12,13,14))',
  ),
  'uk' => 
  array (
    0 => 'fmod($n,10)==1&&fmod($n,100)!=11',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => 'fmod($n,10)==0||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(11,12,13,14))',
  ),
  'cs' => 
  array (
    0 => '$n==1',
    1 => 'in_array($n,array(2,3,4))',
  ),
  'sk' => 
  array (
    0 => '$n==1',
    1 => 'in_array($n,array(2,3,4))',
  ),
  'pl' => 
  array (
    0 => '$n==1',
    1 => 'in_array(fmod($n,10),array(2,3,4))&&!in_array(fmod($n,100),array(12,13,14))',
    2 => '$n!=1&&in_array(fmod($n,10),array(0,1))||in_array(fmod($n,10),array(5,6,7,8,9))||in_array(fmod($n,100),array(12,13,14))',
  ),
  'sl' => 
  array (
    0 => 'fmod($n,100)==1',
    1 => 'fmod($n,100)==2',
    2 => 'in_array(fmod($n,100),array(3,4))',
  ),
  'mt' => 
  array (
    0 => '$n==1',
    1 => '$n==0||in_array(fmod($n,100),range(2,10))',
    2 => 'in_array(fmod($n,100),range(11,19))',
  ),
  'mk' => 
  array (
    0 => 'fmod($n,10)==1&&$n!=11',
  ),
  'cy' => 
  array (
    0 => '$n==0',
    1 => '$n==1',
    2 => '$n==2',
    3 => '$n==3',
    4 => '$n==6',
  ),
  'lag' => 
  array (
    0 => '$n==0',
    1 => '($n>=0&&$n<=2)&&$n!=0&&$n!=2',
  ),
  'shi' => 
  array (
    0 => '($n>=0&&$n<=1)',
    1 => 'in_array($n,range(2,10))',
  ),
  'br' => 
  array (
    0 => 'fmod($n,10)==1&&!in_array(fmod($n,100),array(11,71,91))',
    1 => 'fmod($n,10)==2&&!in_array(fmod($n,100),array(12,72,92))',
    2 => 'in_array(fmod($n,10),array(3,4,9))&&!in_array(fmod($n,100),array_merge(range(10,19),range(70,79),range(90,99)))',
    3 => 'fmod($n,1000000)==0&&$n!=0',
  ),
  'ksh' => 
  array (
    0 => '$n==0',
    1 => '$n==1',
  ),
  'tzm' => 
  array (
    0 => '($n==0||$n==1)||in_array($n,range(11,99))',
  ),
  'gv' => 
  array (
    0 => 'in_array(fmod($n,10),array(1,2))||fmod($n,20)==0',
  ),
);
