#
# Travis Setup
#

# use ubuntu trusty for newer version of nodejs, used for JS testing
dist: trusty

# faster builds on new travis setup not using sudo
# temporary disable, see https://github.com/travis-ci/travis-ci/issues/6842
#sudo: false
sudo: required
group: edge

# build only on master branches
# commented as this prevents people from running builds on their forks:
# https://github.com/yiisoft/yii2/commit/bd87be990fa238c6d5e326d0a171f38d02dc253a
#branches:
#  only:
#    - master
#    - 2.1


#
# Test Matrix
#

language: php

env:
  global:
    - DEFAULT_COMPOSER_FLAGS="--prefer-dist --no-interaction --no-progress --optimize-autoloader"
    - TASK_TESTS_PHP=1
    - TASK_TESTS_JS=0
    - TASK_TESTS_COVERAGE=0


services:
  - memcached
  - mysql
  - postgresql

# cache vendor dirs
cache:
  directories:
    - vendor
    - $HOME/.composer/cache
    - $HOME/.npm

# try running against postgres 9.3
addons:
  postgresql: "9.3"
  code_climate:
    repo_token: 2935307212620b0e2228ab67eadd92c9f5501ddb60549d0d86007a354d56915b

matrix:
  fast_finish: true
  include:
    # run tests coverage on PHP 7.1
    - php: 7.2

    - php: 7.1
      env: TASK_TESTS_COVERAGE=1
    - php: nightly

    # have a separate branch for javascript tests
    - language: node_js
      node_js: 6
      env: TASK_TESTS_PHP=0 TASK_TESTS_JS=1
      # overwrite services used for PHP tests
      services:

  allow_failures:
    - php: nightly
    - php: 7.2

install:
  - |
    if [[ $TASK_TESTS_COVERAGE != 1 && $TRAVIS_PHP_VERSION != hhv* ]]; then
      # disable xdebug for performance reasons when code coverage is not needed
      phpenv config-rm xdebug.ini || echo "xdebug is not installed"
    fi

  # install composer dependencies
  - travis_retry composer self-update
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - travis_retry composer install $DEFAULT_COMPOSER_FLAGS

  # setup PHP extension
  - |
    if [ $TASK_TESTS_PHP == 1 ]; then
      tests/data/travis/apcu-setup.sh
      tests/data/travis/memcache-setup.sh
      tests/data/travis/imagick-setup.sh
    fi

  # setup JS test
  - |
    if [ $TASK_TESTS_JS == 1 ]; then
      travis_retry npm install
    fi

before_script:
  # show some versions and env information
  - php --version
  - composer --version
  - |
    if [ $TASK_TESTS_PHP == 1 ]; then
      php -r "echo INTL_ICU_VERSION . \"\n\";"
      php -r "echo INTL_ICU_DATA_VERSION . \"\n\";"
      psql --version
      mysql --version
    fi
  - |
    if [ $TASK_TESTS_JS == 1 ]; then
      node --version
      npm --version
    fi

  # initialize databases
  - |
    if [ $TASK_TESTS_PHP == 1 ]; then
      travis_retry mysql -e 'CREATE DATABASE `yiitest`;';
      mysql -e "CREATE USER 'travis'@'localhost' IDENTIFIED WITH mysql_native_password;";
      mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'travis'@'localhost' WITH GRANT OPTION;";
      psql -U postgres -c 'CREATE DATABASE yiitest;';
    fi

  # enable code coverage
  - |
    if [ $TASK_TESTS_COVERAGE == 1 ]; then
      PHPUNIT_FLAGS="--coverage-clover=coverage.clover"
    fi


script:
  # PHP tests
  - |
    if [ $TASK_TESTS_PHP == 1 ]; then
      vendor/bin/phpunit --verbose $PHPUNIT_FLAGS --exclude-group mssql,oci,wincache,xcache,zenddata,cubrid
    fi

  # JS tests
  - |
    if [ $TASK_TESTS_JS == 1 ]; then
      npm test
    fi

after_script:
  - |
    if [ $TASK_TESTS_COVERAGE == 1 ]; then
      travis_retry wget https://scrutinizer-ci.com/ocular.phar
      php ocular.phar code-coverage:upload --format=php-clover coverage.clover
    fi
